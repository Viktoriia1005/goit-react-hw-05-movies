{"version":3,"file":"static/js/986.5468110e.chunk.js","mappings":"+NACA,GAAgB,KAAO,mBAAmB,MAAQ,qB,SCMnC,SAASA,IACtB,OAAwBC,EAAAA,EAAAA,UAAS,MAAjC,eAAOC,EAAP,KAAaC,EAAb,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAMR,OAJAE,EAAAA,EAAAA,YAAU,WACRC,EAAAA,GAAsBH,GAASI,KAAKL,KACnC,CAACC,KAGF,eAAIK,UAAWC,EAAAA,KAAf,SACGR,GACCA,EAAKS,KAAI,SAAAC,GAAO,OACd,gBAAqBH,UAAWC,EAAAA,KAAhC,WACE,gBACED,UAAWC,EAAAA,MACXG,IACED,EAAQE,aACJ,kCAAoCF,EAAQE,aAC5C,wEAENC,IAAKH,EAAQI,QAEf,wBAAKJ,EAAQI,SAVNJ,EAAQK,W,0MChBrBC,EAAU,mCAIT,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,+FACCC,EADD,qCACqCF,GADrC,kBAGoBG,IAAAA,IAAUD,GAH9B,uBAGKE,EAHL,EAGKA,KAHL,kBAIIA,EAAKC,SAJT,gCAMHC,QAAQC,MAAR,MANG,gFAUA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA4BtB,GAA5B,kGAEoBiB,IAAAA,IAAA,gBAAmBjB,EAAnB,oBAAsCc,IAF1D,uBAEKI,EAFL,EAEKA,KAFL,kBAGIA,GAHJ,gCAKHE,QAAQC,MAAR,MALG,gFASA,SAAeE,EAAtB,+CAAO,OAAP,oBAAO,WAA2BvB,GAA3B,kGAEoBiB,IAAAA,IAAA,gBACZjB,EADY,4BACec,IAHnC,uBAEKI,EAFL,EAEKA,KAFL,kBAKIA,EAAKpB,MALT,gCAOHsB,QAAQC,MAAR,MAPG,gFAWA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA8BxB,GAA9B,kGAEoBiB,IAAAA,IAAA,gBACZjB,EADY,4BACec,EADf,oBAFpB,uBAEKI,EAFL,EAEKA,KAFL,kBAKIA,EAAKC,SALT,gCAOHC,QAAQC,MAAR,MAPG,gFAWA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAAsCC,GAAtC,kFACCV,EADD,+BAC+BF,EAD/B,kBACgDY,GADhD,kBAGoBT,IAAAA,IAAUD,GAH9B,uBAGKE,EAHL,EAGKA,KAHL,kBAIIA,EAAKC,SAJT,gCAMHC,QAAQC,MAAR,MANG,gFA3CPJ,IAAAA,SAAAA,QAHiB","sources":["webpack://react-homework-template/./src/pages/Cast.module.css?8b09","pages/Cast.js","services/API.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"List\":\"Cast_List__m7tFi\",\"Image\":\"Cast_Image__nSYsC\"};","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport * as moviesApi from '../services/API';\n\nimport s from './Cast.module.css';\n\nexport default function Cast() {\n  const [cast, setCast] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    moviesApi.getCastById(movieId).then(setCast);\n  }, [movieId]);\n\n  return (\n    <ul className={s.List}>\n      {cast &&\n        cast.map(element => (\n          <li key={element.id} className={s.Item}>\n            <img\n              className={s.Image}\n              src={\n                element.profile_path\n                  ? `https://image.tmdb.org/t/p/w500` + element.profile_path\n                  : 'https://eitrawmaterials.eu/wp-content/uploads/2016/09/person-icon.png'\n              }\n              alt={element.name}\n            />\n            <h2>{element.name}</h2>\n          </li>\n        ))}\n    </ul>\n  );\n}\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '76293c6bcb8bbcc89a96d2b767d5c3a3';\n\naxios.defaults.baseURL = BASE_URL;\n\nexport async function getTrendingMovies() {\n  const url = `trending/movie/day?api_key=${API_KEY}`;\n  try {\n    const { data } = await axios.get(url);\n    return data.results;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function getMovieById(movieId) {\n  try {\n    const { data } = await axios.get(`movie/${movieId}?api_key=${API_KEY}`);\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function getCastById(movieId) {\n  try {\n    const { data } = await axios.get(\n      `movie/${movieId}/credits?api_key=${API_KEY}`\n    );\n    return data.cast;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function getReviewsById(movieId) {\n  try {\n    const { data } = await axios.get(\n      `movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`\n    );\n    return data.results;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function getMoviesbySearchQuery(movieName) {\n  const url = `search/movie?api_key=${API_KEY}&query=${movieName}`;\n  try {\n    const { data } = await axios.get(url);\n    return data.results;\n  } catch (error) {\n    console.error(error);\n  }\n}\n"],"names":["Cast","useState","cast","setCast","movieId","useParams","useEffect","moviesApi","then","className","s","map","element","src","profile_path","alt","name","id","API_KEY","getTrendingMovies","url","axios","data","results","console","error","getMovieById","getCastById","getReviewsById","getMoviesbySearchQuery","movieName"],"sourceRoot":""}