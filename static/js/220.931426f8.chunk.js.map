{"version":3,"file":"static/js/220.931426f8.chunk.js","mappings":"+NACA,EAAuB,sBAAvB,EAAqD,uBAArD,EAAsF,yB,SCMvE,SAASA,IACtB,OAA8BC,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAMR,OAJAE,EAAAA,EAAAA,YAAU,WACRC,EAAAA,GAAyBH,GAASI,KAAKL,KACtC,CAACC,KAGF,8BACsB,IAAnBF,EAAQO,QACP,wBACGP,EAAQQ,KAAI,SAAAC,GAAM,OACjB,gBAAoBC,UAAWC,EAA/B,WACE,gBAAID,UAAWC,EAAf,qBAAiCF,EAAOG,WACxC,cAAGF,UAAWC,EAAd,SAA0BF,EAAOI,YAF1BJ,EAAOK,UAOpB,oE,0MCxBFC,EAAU,mCAIT,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,+FACCC,EADD,qCACqCF,GADrC,kBAGoBG,IAAAA,IAAUD,GAH9B,uBAGKE,EAHL,EAGKA,KAHL,kBAIIA,EAAKC,SAJT,gCAMHC,QAAQC,MAAR,MANG,gFAUA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA4BrB,GAA5B,kGAEoBgB,IAAAA,IAAA,gBAAmBhB,EAAnB,oBAAsCa,IAF1D,uBAEKI,EAFL,EAEKA,KAFL,kBAGIA,GAHJ,gCAKHE,QAAQC,MAAR,MALG,gFASA,SAAeE,EAAtB,+CAAO,OAAP,oBAAO,WAA2BtB,GAA3B,kGAEoBgB,IAAAA,IAAA,gBACZhB,EADY,4BACea,IAHnC,uBAEKI,EAFL,EAEKA,KAFL,kBAKIA,EAAKM,MALT,gCAOHJ,QAAQC,MAAR,MAPG,gFAWA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAA8BxB,GAA9B,kGAEoBgB,IAAAA,IAAA,gBACZhB,EADY,4BACea,EADf,oBAFpB,uBAEKI,EAFL,EAEKA,KAFL,kBAKIA,EAAKC,SALT,gCAOHC,QAAQC,MAAR,MAPG,gFAWA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAAsCC,GAAtC,kFACCX,EADD,+BAC+BF,EAD/B,kBACgDa,GADhD,kBAGoBV,IAAAA,IAAUD,GAH9B,uBAGKE,EAHL,EAGKA,KAHL,kBAIIA,EAAKC,SAJT,gCAMHC,QAAQC,MAAR,MANG,gFA3CPJ,IAAAA,SAAAA,QAHiB","sources":["webpack://react-homework-template/./src/pages/Reviews.module.css?68db","pages/Reviews.js","services/API.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"Item\":\"Reviews_Item__+h4Vx\",\"Title\":\"Reviews_Title__NF4ch\",\"Content\":\"Reviews_Content__0iy1h\"};","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport * as moviesApi from '../services/API';\n\nimport s from './Reviews.module.css';\n\nexport default function Reviews() {\n  const [reviews, setReviews] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    moviesApi.getReviewsById(movieId).then(setReviews);\n  }, [movieId]);\n\n  return (\n    <>\n      {reviews.length !== 0 ? (\n        <ul>\n          {reviews.map(review => (\n            <li key={review.id} className={s.Item}>\n              <h2 className={s.Title}>Author: {review.author}</h2>\n              <p className={s.Content}>{review.content}</p>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <p>We don't have reviews for this movie</p>\n      )}\n    </>\n  );\n}\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '76293c6bcb8bbcc89a96d2b767d5c3a3';\n\naxios.defaults.baseURL = BASE_URL;\n\nexport async function getTrendingMovies() {\n  const url = `trending/movie/day?api_key=${API_KEY}`;\n  try {\n    const { data } = await axios.get(url);\n    return data.results;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function getMovieById(movieId) {\n  try {\n    const { data } = await axios.get(`movie/${movieId}?api_key=${API_KEY}`);\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function getCastById(movieId) {\n  try {\n    const { data } = await axios.get(\n      `movie/${movieId}/credits?api_key=${API_KEY}`\n    );\n    return data.cast;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function getReviewsById(movieId) {\n  try {\n    const { data } = await axios.get(\n      `movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`\n    );\n    return data.results;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function getMoviesbySearchQuery(movieName) {\n  const url = `search/movie?api_key=${API_KEY}&query=${movieName}`;\n  try {\n    const { data } = await axios.get(url);\n    return data.results;\n  } catch (error) {\n    console.error(error);\n  }\n}\n"],"names":["Reviews","useState","reviews","setReviews","movieId","useParams","useEffect","moviesApi","then","length","map","review","className","s","author","content","id","API_KEY","getTrendingMovies","url","axios","data","results","console","error","getMovieById","getCastById","cast","getReviewsById","getMoviesbySearchQuery","movieName"],"sourceRoot":""}