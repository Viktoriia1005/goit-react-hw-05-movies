{"version":3,"file":"static/js/926.d9c13d0f.chunk.js","mappings":"qPAKMA,EAAMC,EAAAA,GAAAA,IAAH,qEAmDT,UA9CmB,WACjB,OAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA4BF,EAAAA,EAAAA,UAAS,MAArC,eAAOG,EAAP,KAAeC,EAAf,KACMC,GAAUC,EAAAA,EAAAA,WAChBC,EAAAA,EAAAA,YAAU,WAAM,wCACd,oGACsBC,EAAAA,GAAgBP,GADtC,OACQQ,EADR,OAEEL,EAAUK,GAFZ,4CADc,sBAKTJ,EAAQK,QALE,WAAD,wBAQZC,GAFAN,EAAQK,SAAU,IAInB,CAACT,IAMJ,OACE,iCAGE,kBAAMW,SATW,SAAAC,GACnBA,EAAEC,iBACFZ,EAASW,EAAEE,OAAOC,SAASf,MAAMgB,OACjCJ,EAAEE,OAAOG,SAMP,WACE,kBAAOC,KAAK,OAAOC,KAAK,WACxB,mBAAQD,KAAK,SAAb,uBAGDhB,IACC,SAACL,EAAD,UACGK,EAAOkB,QAAQC,KAAI,SAAAb,GAAK,OACvB,SAAC,KAAD,CACEc,GAAI,CACFC,SAAS,WAAD,OAAaf,EAAMgB,KAF/B,SAMGhB,EAAMiB,OAFFjB,EAAMgB,c,0MC3CnBE,EAAU,mCAEhBC,IAAAA,SAAAA,QAHiB,+BAKV,IAAMC,EAAU,mCAAG,6GAECD,IAAAA,IAAA,sCAAyCD,IAF1C,cAEhBG,EAFgB,yBAGfA,EAASC,MAHM,gCAKtBC,QAAQC,MAAR,MALsB,yDAAH,qDASVC,EAAY,mCAAG,WAAMC,GAAN,gGAEDP,IAAAA,IAAA,iBACXO,EADW,oBACSR,EADT,mBAErBQ,GAJsB,cAElBL,EAFkB,yBAMjBA,EAASC,MANQ,gCAQxBC,QAAQC,MAAR,MARwB,yDAAH,sDAWZG,EAAS,mCAAG,WAAMD,GAAN,gGAEEP,IAAAA,IAAA,iBACXO,EADW,4BACiBR,EADjB,mBAErBQ,GAJmB,cAEfL,EAFe,yBAMdA,EAASC,MANK,gCAQrBC,QAAQC,MAAR,MARqB,yDAAH,sDAWTI,EAAY,mCAAG,WAAMF,GAAN,yFACHP,IAAAA,IAAA,iBACXO,EADW,4BACiBR,IAFd,cACpBG,EADoB,gBAIEA,EAASC,KAJX,cAIpBO,EAJoB,yBAKnBA,GALmB,2CAAH,sDAOZ3B,EAAW,mCAAG,WAAMV,GAAN,gGAEA2B,IAAAA,IAAA,gCACID,EADJ,iCACoC1B,EADpC,+BAErBA,GAJqB,cAEjB6B,EAFiB,yBAMhBA,EAASC,MANO,gCAQvBC,QAAQC,MAAR,MARuB,yDAAH","sources":["components/MoviesPage/MoviesPage.js","services/API.js"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport * as API from 'services/API';\nimport styled from 'styled-components';\n\nimport { useEffect, useState, useRef } from 'react';\nconst Div = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst MoviesPage = () => {\n  const [query, setQuery] = useState('');\n  const [search, setSearch] = useState(null);\n  const mounted = useRef();\n  useEffect(() => {\n    async function FetchSearch() {\n      const movie = await API.FetchSearch(query);\n      setSearch(movie);\n    }\n    if (!mounted.current) {\n      mounted.current = true;\n    } else {\n      FetchSearch();\n    }\n  }, [query]);\n  const handleSubmit = e => {\n    e.preventDefault();\n    setQuery(e.target.elements.query.value);\n    e.target.reset();\n  };\n  return (\n    <>\n      {/* <Outlet/> */}\n\n      <form onSubmit={handleSubmit}>\n        <input type=\"text\" name=\"query\"></input>\n        <button type=\"submit\">Search</button>\n      </form>\n\n      {search && (\n        <Div>\n          {search.results.map(movie => (\n            <Link\n              to={{\n                pathname: `/movies/${movie.id}`,\n              }}\n              key={movie.id}\n            >\n              {movie.title}\n            </Link>\n          ))}\n        </Div>\n      )}\n    </>\n  );\n};\nexport default MoviesPage;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '76293c6bcb8bbcc89a96d2b767d5c3a3';\n\naxios.defaults.baseURL = BASE_URL;\n\nexport const FetchTrend = async () => {\n  try {\n    const response = await axios.get(`/trending/movie/day?api_key=${API_KEY}`);\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const FetchDetails = async movie_id => {\n  try {\n    const response = await axios.get(\n      `/movie/${movie_id}?api_key=${API_KEY}&language=en-US`,\n      movie_id\n    );\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n};\nexport const FetchCast = async movie_id => {\n  try {\n    const response = await axios.get(\n      `/movie/${movie_id}/credits?api_key=${API_KEY}&language=en-US`,\n      movie_id\n    );\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n};\nexport const FetchReviews = async movie_id => {\n  const response = await axios.get(\n    `/movie/${movie_id}/reviews?api_key=${API_KEY}`\n  );\n  const reviewDetails = await response.data;\n  return reviewDetails;\n};\nexport const FetchSearch = async query => {\n  try {\n    const response = await axios.get(\n      `/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`,\n      query\n    );\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n};\n"],"names":["Div","styled","useState","query","setQuery","search","setSearch","mounted","useRef","useEffect","API","movie","current","FetchSearch","onSubmit","e","preventDefault","target","elements","value","reset","type","name","results","map","to","pathname","id","title","API_KEY","axios","FetchTrend","response","data","console","error","FetchDetails","movie_id","FetchCast","FetchReviews","reviewDetails"],"sourceRoot":""}