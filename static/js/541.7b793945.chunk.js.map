{"version":3,"file":"static/js/541.7b793945.chunk.js","mappings":"0OAwCA,UAnCa,WACX,OAAwBA,EAAAA,EAAAA,UAAS,MAAjC,eAAOC,EAAP,KAAaC,EAAb,KACMC,GAAaC,EAAAA,EAAAA,MAAbD,SASN,OARAE,EAAAA,EAAAA,YAAU,WAAM,wCACd,oGACsBC,EAAAA,GAAcH,GADpC,OACQI,EADR,OAEEL,EAAQK,GAFV,4CADc,uBAAC,WAAD,wBAMdC,KACC,CAACL,KAEF,yBACGF,IACC,wBACGA,EAAKA,KAAKQ,KAAI,SAAAC,GAAM,OACnB,0BAC2B,OAAxBA,EAAOC,cACN,gBAAKC,IAAKC,EAAOC,IAAI,GAAGC,MAAM,SAE9B,gBACEH,IAAG,yCAAoCF,EAAOC,cAC9CG,IAAI,GACJC,MAAM,SAGV,uBAAIL,EAAOM,QACX,wCAAgBN,EAAOO,eAXhBP,EAAOQ,a,0MClBtBC,EAAU,mCAEhBC,IAAAA,SAAAA,QAHiB,+BAKV,IAAMC,EAAU,mCAAG,6GAECD,IAAAA,IACrB,gEAHoB,cAEhBE,EAFgB,yBAKfA,EAASC,MALM,gCAOtBC,QAAQC,MAAR,MAPsB,yDAAH,qDAWVC,EAAY,mCAAG,WAAMvB,GAAN,gGAEDiB,IAAAA,IAAA,iBACXjB,EADW,oBACSgB,EADT,mBAErBhB,GAJsB,cAElBmB,EAFkB,yBAMjBA,EAASC,MANQ,gCAQxBC,QAAQC,MAAR,MARwB,yDAAH,sDAWZjB,EAAS,mCAAG,WAAML,GAAN,gGAEEiB,IAAAA,IAAA,iBACXjB,EADW,4BACiBgB,EADjB,mBAErBhB,GAJmB,cAEfmB,EAFe,yBAMdA,EAASC,MANK,gCAQrBC,QAAQC,MAAR,MARqB,yDAAH,sDAWTE,EAAY,mCAAG,WAAMxB,GAAN,gGAEDiB,IAAAA,IAAA,iBACXjB,EADW,4BACiBgB,EADjB,mBAErBhB,GAJsB,cAElBmB,EAFkB,yBAMjBA,EAASC,MANQ,gCAQxBC,QAAQC,MAAR,MARwB,yDAAH,sDAWZG,EAAW,mCAAG,WAAMC,GAAN,gGAEAT,IAAAA,IAAA,gCACID,EADJ,iCACoCU,EADpC,+BAErBA,GAJqB,cAEjBP,EAFiB,yBAMhBA,EAASC,MANO,gCAQvBC,QAAQC,MAAR,MARuB,yDAAH,uD","sources":["components/Cast/Cast.js","services/API.js"],"sourcesContent":["import * as API from 'services/API';\nimport { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport image from '../../image/Cinema.png';\n\nconst Cast = () => {\n  const [cast, setCast] = useState(null);\n  let { movie_id } = useParams();\n  useEffect(() => {\n    async function FetchCast() {\n      const movie = await API.FetchCast(movie_id);\n      setCast(movie);\n    }\n\n    FetchCast();\n  }, [movie_id]);\n  return (\n    <div>\n      {cast && (\n        <ul>\n          {cast.cast.map(person => (\n            <li key={person.id}>\n              {person.profile_path === null ? (\n                <img src={image} alt=\"\" width=\"200\"></img>\n              ) : (\n                <img\n                  src={`https://image.tmdb.org/t/p/w500${person.profile_path}`}\n                  alt=\"\"\n                  width=\"200\"\n                />\n              )}\n              <p>{person.name}</p>\n              <p>Character : {person.character}</p>\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n};\nexport default Cast;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '76293c6bcb8bbcc89a96d2b767d5c3a3';\n\naxios.defaults.baseURL = BASE_URL;\n\nexport const FetchTrend = async () => {\n  try {\n    const response = await axios.get(\n      '/trending/movie/day?api_key=76293c6bcb8bbcc89a96d2b767d5c3a3'\n    );\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const FetchDetails = async movie_id => {\n  try {\n    const response = await axios.get(\n      `/movie/${movie_id}?api_key=${API_KEY}&language=en-US`,\n      movie_id\n    );\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n};\nexport const FetchCast = async movie_id => {\n  try {\n    const response = await axios.get(\n      `/movie/${movie_id}/credits?api_key=${API_KEY}&language=en-US`,\n      movie_id\n    );\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n};\nexport const FetchReviews = async movie_id => {\n  try {\n    const response = await axios.get(\n      `/movie/${movie_id}/reviews?api_key=${API_KEY}&language=en-US`,\n      movie_id\n    );\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n};\nexport const FetchSearch = async query => {\n  try {\n    const response = await axios.get(\n      `/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`,\n      query\n    );\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n};\n"],"names":["useState","cast","setCast","movie_id","useParams","useEffect","API","movie","FetchCast","map","person","profile_path","src","image","alt","width","name","character","id","API_KEY","axios","FetchTrend","response","data","console","error","FetchDetails","FetchReviews","FetchSearch","query"],"sourceRoot":""}