{"version":3,"file":"static/js/785.899a0dab.chunk.js","mappings":"gOAmCA,UA/BgB,WACd,OAA8BA,EAAAA,EAAAA,UAAS,MAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACMC,GAAaC,EAAAA,EAAAA,MAAbD,SASN,OARAE,EAAAA,EAAAA,YAAU,WAAM,wCACd,oGACsBC,EAAAA,GAAiBH,GADvC,OACQI,EADR,OAEEL,EAAWK,GAFb,4CADc,uBAAC,WAAD,wBAKdC,KACC,CAACL,IACJM,QAAQC,IAAIT,IAEV,yBACGA,IACC,wBAC8B,IAA3BA,EAAQU,QAAQC,QACf,oEAEAX,EAAQU,QAAQE,KAAI,SAAAC,GAAM,OACxB,2BACE,qCAAaA,EAAOC,WACpB,uBAAID,EAAOE,sB,0MCtBrBC,EAAU,mCAEhBC,IAAAA,SAAAA,QAHiB,+BAKV,IAAMC,EAAU,mCAAG,6GAECD,IAAAA,IACrB,gEAHoB,cAEhBE,EAFgB,yBAKfA,EAASC,MALM,gCAOtBZ,QAAQa,MAAR,MAPsB,yDAAH,qDAWVC,EAAY,mCAAG,WAAMpB,GAAN,gGAEDe,IAAAA,IAAA,iBACXf,EADW,oBACSc,EADT,mBAErBd,GAJsB,cAElBiB,EAFkB,yBAMjBA,EAASC,MANQ,gCAQxBZ,QAAQa,MAAR,MARwB,yDAAH,sDAWZE,EAAS,mCAAG,WAAMrB,GAAN,gGAEEe,IAAAA,IAAA,iBACXf,EADW,4BACiBc,EADjB,mBAErBd,GAJmB,cAEfiB,EAFe,yBAMdA,EAASC,MANK,gCAQrBZ,QAAQa,MAAR,MARqB,yDAAH,sDAWTd,EAAY,mCAAG,WAAML,GAAN,gGAEDe,IAAAA,IAAA,iBACXf,EADW,4BACiBc,EADjB,mBAErBd,GAJsB,cAElBiB,EAFkB,yBAMjBA,EAASC,MANQ,gCAQxBZ,QAAQa,MAAR,MARwB,yDAAH,sDAWZG,EAAW,mCAAG,WAAMC,GAAN,gGAEAR,IAAAA,IAAA,gCACID,EADJ,iCACoCS,EADpC,+BAErBA,GAJqB,cAEjBN,EAFiB,yBAMhBA,EAASC,MANO,gCAQvBZ,QAAQa,MAAR,MARuB,yDAAH","sources":["components/Reviews/Reviews.js","services/API.js"],"sourcesContent":["import * as API from 'services/API';\nimport { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState(null);\n  let { movie_id } = useParams();\n  useEffect(() => {\n    async function FetchReviews() {\n      const movie = await API.FetchReviews(movie_id);\n      setReviews(movie);\n    }\n    FetchReviews();\n  }, [movie_id]);\n  console.log(reviews);\n  return (\n    <div>\n      {reviews && (\n        <ul>\n          {reviews.results.length === 0 ? (\n            <p>We don`t have any reviews for this movie</p>\n          ) : (\n            reviews.results.map(review => (\n              <li>\n                <p>Author : {review.author}</p>\n                <p>{review.content}</p>\n              </li>\n            ))\n          )}\n          {}\n        </ul>\n      )}\n    </div>\n  );\n};\nexport default Reviews;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '76293c6bcb8bbcc89a96d2b767d5c3a3';\n\naxios.defaults.baseURL = BASE_URL;\n\nexport const FetchTrend = async () => {\n  try {\n    const response = await axios.get(\n      '/trending/movie/day?api_key=76293c6bcb8bbcc89a96d2b767d5c3a3'\n    );\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const FetchDetails = async movie_id => {\n  try {\n    const response = await axios.get(\n      `/movie/${movie_id}?api_key=${API_KEY}&language=en-US`,\n      movie_id\n    );\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n};\nexport const FetchCast = async movie_id => {\n  try {\n    const response = await axios.get(\n      `/movie/${movie_id}/credits?api_key=${API_KEY}&language=en-US`,\n      movie_id\n    );\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n};\nexport const FetchReviews = async movie_id => {\n  try {\n    const response = await axios.get(\n      `/movie/${movie_id}/reviews?api_key=${API_KEY}&language=en-US`,\n      movie_id\n    );\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n};\nexport const FetchSearch = async query => {\n  try {\n    const response = await axios.get(\n      `/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`,\n      query\n    );\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n};\n"],"names":["useState","reviews","setReviews","movie_id","useParams","useEffect","API","movie","FetchReviews","console","log","results","length","map","review","author","content","API_KEY","axios","FetchTrend","response","data","error","FetchDetails","FetchCast","FetchSearch","query"],"sourceRoot":""}